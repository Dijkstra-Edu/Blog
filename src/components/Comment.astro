---
import config from '@/site-config'
import '@waline/client/style'
import { cn } from 'astro-pure/utils'

const { class: className } = Astro.props
---

{config.integ.waline.enable && (
  <comment-component>
    <div id='waline' class={cn('not-prose', className)}>
      <!-- Fallback static comments for design -->
      <div class="wl-item border rounded-md p-4 mb-4">
        <div class="wl-meta flex items-center gap-2 mb-2">
          <img src="https://i.pravatar.cc/40?img=1" class="rounded-full w-10 h-10"/>
          <span class="wl-author font-medium">Alice</span>
          <span class="wl-date text-xs text-gray-500">2 hours ago</span>
        </div>
        <p class="wl-comment-text text-gray-700">
          This is a static comment to show borders and layout.
        </p>
      </div>

      <div class="wl-item border rounded-md p-4 mb-4">
        <div class="wl-meta flex items-center gap-2 mb-2">
          <img src="https://i.pravatar.cc/40?img=2" class="rounded-full w-10 h-10"/>
          <span class="wl-author font-medium">Bob</span>
          <span class="wl-date text-xs text-gray-500">30 minutes ago</span>
        </div>
        <p class="wl-comment-text text-gray-700">
          Another static comment to demonstrate the template styling.
        </p>
      </div>

      <!-- Original Waline fallback message -->
      Comment seems to stuck. Try to refresh?âœ¨
    </div>
  </comment-component>
)}

<script>
import { init as walineInit } from '@waline/client'
import type { WalineEmojiPresets } from '@waline/client'
import config from 'virtual:config'

const walineConfig = config.integ.waline

class Comment extends HTMLElement {
  constructor() {
    super()
  }

  connectedCallback() {
    ;(globalThis as unknown as { __VUE_OPTIONS_API__: boolean }).__VUE_OPTIONS_API__ = true
    ;(globalThis as unknown as { __VUE_PROD_DEVTOOLS__: boolean }).__VUE_PROD_DEVTOOLS__ = false
    ;(
      globalThis as unknown as { __VUE_PROD_HYDRATION_MISMATCH_DETAILS__: boolean }
    ).__VUE_PROD_HYDRATION_MISMATCH_DETAILS__ = false

    const emoji = walineConfig.emoji?.map(
      (preset) => `${config.npmCDN}/@waline/emojis@1.2.0/${preset}` as WalineEmojiPresets
    )

    walineInit({
      el: '#waline',
      serverURL: walineConfig.server || '',
      emoji,
      reaction: ['/icons/heart-item.svg'],
      ...walineConfig.additionalConfigs
    })
  }
}

if (walineConfig.enable) customElements.define('comment-component', Comment)
</script>
