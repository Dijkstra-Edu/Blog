---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import Divider from "@/components/bases/divider.astro";
import { categoriesHandler } from "@/lib/handlers/categories";
import { getDateDistance } from "@/lib/utils/date";

type Props = {
  article: CollectionEntry<"blog">;
};

const { article } = Astro.props;

// Removed unused remarkPluginFrontmatter
// const { remarkPluginFrontmatter } = await render(article);

const category = categoriesHandler.oneCategory(article.data.category.id);

// ✅ Handle authors: convert array/object to readable string
// ✅ Handle authors safely
let authors: string = "Unknown Author";

if (Array.isArray(article.data.authors)) {
  authors = article.data.authors
    .map(a => {
      // If a is string, use it; else if object, use name or id
      if (typeof a === "string") return a;
      return (a as { name?: string; id: string }).name || (a as { name?: string; id: string }).id || "Unknown";
    })
    .join(", ");
} else if (typeof article.data.authors === "string") {
  authors = article.data.authors;
} else if (article.data.authors && typeof article.data.authors === "object" && "name" in article.data.authors) {
  authors = (article.data.authors as { name?: string }).name || "Unknown";
}


---
<article class="group relative isolate flex flex-col-reverse md:flex-col gap-4">
  <div class="aspect-video overflow-hidden rounded-md">
    <Image
      src={article.data.cover}
      alt={article.data.covert_alt
        ? article.data.covert_alt
        : article.data.title}
      layout="constrained"
      loading="eager"
    />
  </div>
  <div class="flex flex-col gap-2">
    <div>
      <h2 class="text-xl font-semibold lg:group-hover:underline underline-offset-2">
        <a href={`/blog/${article.id}`}>
          <span class="absolute inset-0 z-10 pointer-events-none"></span>
          {article.data.title}
        </a>
      </h2>
      <p class="text-base-content/90 text-base max-w-lg">
        {article.data.description}
      </p>
    </div>
    <div class="flex items-center text-xs text-base-content/80 mt-2">
      <span class="text-primary dark:text-primary">{category.data.title}</span>
      <Divider />
      <span>|</span>
      <Divider />
     
      <span>{getDateDistance(article.data.publishedTime)}</span>

      <Divider />
      <span>|</span>
      <Divider />
      <span>{authors}</span>
    </div>
  </div>
</article>
